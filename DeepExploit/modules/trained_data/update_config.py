#!/usr/bin/env python3
import configparser
import os
import socket
import subprocess


def get_ip_address():
    hostname = socket.gethostname()
    ip_address = socket.gethostbyname(hostname)
    return ip_address


def is_kali_linux():
    with open("/etc/os-release") as f:
        os_info = f.read()
    return "kali" in os_info.lower()


def update_config_file(config_file_path):
    config = configparser.ConfigParser()
    config.read(config_file_path)

    if is_kali_linux():
        ip_address = get_ip_address()
        config.set("Common", "server_host", ip_address)
        config.set("Metasploit", "lport", ip_address)

        with open(config_file_path, "w") as configfile:
            config.write(configfile)

        return config
    return None


def update_proxychains_conf(config):
    proxy_port = config.get("Metasploit", "proxy_port")
    with open("/etc/proxychains.conf", "r") as file:
        content = file.readlines()

    with open("/etc/proxychains.conf", "w") as file:
        for line in content:
            if line.startswith("socks4"):
                file.write(f"socks4 127.0.0.1 {proxy_port}\n")
            else:
                file.write(line)


def init_msfdb():
    subprocess.run(["msfdb", "init"], check=True)


def start_msgrpc_server(config):
    msgrpc_user = config.get("Common", "msgrpc_user")
    msgrpc_pass = config.get("Common", "msgrpc_pass")
    server_port = config.get("Common", "server_port")

    subprocess.Popen(
        ["msfrpcd", "-P", msgrpc_pass, "-U", msgrpc_user, "-p", server_port, "-f"]
    )


if __name__ == "__main__":
    config_file_path = "config.ini"
    config = update_config_file(config_file_path)

    if config:
        init_msfdb()
        update_proxychains_conf(config)
        start_msgrpc_server(config)
